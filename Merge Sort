#include <stdio.h>

void merge(int arr[], int low, int mid, int high) {
    int temp[1000]; // Make sure it's big enough for your use case
    int left = low, right = mid + 1, idx = 0;

    while (left <= mid && right <= high) {
        if (arr[left] <= arr[right])
            temp[idx++] = arr[left++];
        else
            temp[idx++] = arr[right++];
    }

    while (left <= mid)
        temp[idx++] = arr[left++];

    while (right <= high)
        temp[idx++] = arr[right++];

    for (int i = low; i <= high; i++)
        arr[i] = temp[i - low];
}

void mergeSort(int arr[], int low, int high) {
    if (low >= high)
        return;

    int mid = (low + high) / 2;
    mergeSort(arr, low, mid);
    mergeSort(arr, mid + 1, high);
    merge(arr, low, mid, high);
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main() {
    int arr[] = {38, 27, 43, 3, 9, 82, 10};
    int size = sizeof(arr) / sizeof(arr[0]);

    printArray(arr, size);
    mergeSort(arr, 0, size - 1);
    printArray(arr, size);

    return 0;
}
